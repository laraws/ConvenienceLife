version: '3'
services:

  #PHP Service
  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
    image: conveniencelife/php
    container_name: convenience_life_app
    restart: unless-stopped
    tty: true
    command: bash -c "/var/www/docker-config/php/shell/setup.sh && php-fpm"
    environment:
      SERVICE_NAME: ${SERVICE_TAGS}
      SERVICE_TAGS: ${SERVICE_NAME}
      XDEBUG_CONFIG: remote_host=${XDEBUG_REMOTE_HOST}
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker-config/php/php-config/local.ini:/usr/local/etc/php/conf.d/local.ini
      - crondata:/var/spool/cron/
      - supervisorddata:/etc/supervisor/conf.d/
    networks:
      - convenience_life_network

  #Nginx Service
  nginx:
    image: nginx
    container_name: convenience_life_nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker-config/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - convenience_life_network

  #MySQL Service
  db:
    image: mysql/mysql-server:latest
    container_name: convenience_life_db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD_DOCKER}
      - MYSQL_DATABASE=${DB_DATABASE_DOCKER}
      - MYSQL_USER=${DB_USERNAME_DOCKER}
      - MYSQL_PASSWORD=${DB_PASSWORD_DOCKER}
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - convenience_life_network


    #node
  node:
    image: laraws/node:latest
    container_name: convenience_life_node
    restart: unless-stopped
    tty: true
    volumes:
      - ./:/app
    working_dir: /app
    networks:
      - convenience_life_network

  redis:
    image: bitnami/redis:latest
    container_name: convenience_life_redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD_DOCKER}
    volumes:
      - redisdata:/bitnami
    ports:
      - "6379:6379"
    networks:
      - convenience_life_network

#Docker Networks
networks:
  convenience_life_network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local
  crondata:
    driver: local
  supervisorddata:
    driver: local
